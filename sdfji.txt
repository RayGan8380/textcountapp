'use client';
import { useState, useRef } from "react";
import uploadFiles from "@/app/api/uploadFiles";

const DragDropFiles = () => {
    const [files, setFiles] = useState(null);
    const [results, setResults] = useState(null); // New state to store the results
    const inputRef = useRef();

    const handleDragOver = (event) => {
        event.preventDefault();
    };

    const handleDrop = (event) => {
        event.preventDefault();
        setFiles(event.dataTransfer.files);
    };

    const handleOnSubmit = (event) => {
        event.preventDefault();

        if (!files) {
            return;
        }

            // Upload files and retrieve results
        const uploadResponse = uploadFiles(files);

        // Process the text files and calculate the chattiest users
        const chattiestUsers = {};

        for (let i = 0; i < uploadResponse.length; i++) {
            const file = uploadResponse[i];
            const text = file.text();

            // Extract usernames and words from the text
            const lines = text.split("\n");
            for (const line of lines) {
            if (line.startsWith("<") && line.includes(">")) {
                const username = line.substring(1, line.indexOf(">")).trim();
                const words = line.split(" ").filter((word) => word !== "").length;

                if (chattiestUsers.hasOwnProperty(username)) {
                chattiestUsers[username] += words;
                } else {
                chattiestUsers[username] = words;
                }
            }
            }
        }

        // Sort the chattiest users in descending order
    const sortedUsers = Object.entries(chattiestUsers).sort(
        (a, b) => b[1] - a[1]
    );

    // Prepare the result string
    let resultString = "";
    for (let i = 0; i < sortedUsers.length; i++) {
        const [username, words] = sortedUsers[i];
        resultString += `${i + 1}. ${username} - ${words} words\n`;
    }

    // Set the results state and update the UI
    setResults(resultString);
    };

    if (files) return (
        <div className="container h-96 py-10 flex md:flex-row mx-auto flew-col">
                    <div className="mx-8 lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 text-center"
                            onDragOver={handleDragOver}
                            onDrop={handleDrop}>
                        <div className=" overflow-auto h-full py-10 border-2  border-gray-200 border-opacity-60 rounded-lg ">
                            <ul>
                                {Array.from(files).map((file, idx) => <li key={idx}>{file.name}</li> )}
                            </ul>
                            <input type="file"
                                    multiple
                                    onChange={(event) => setFiles(event.target.files)}
                                    hidden
                                    ref={inputRef}
                            />
                            <button onClick={() => inputRef.current.click()}  className="ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg">Select Files</button>
                        </div>
                        <div className="py-5">
                                <button onClick={handleOnSubmit} className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Submit</button>
                        </div>
                    </div>
                    
                    <div className="lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 text-center">
                        <div className="py-10 overflow-auto h-full border-2 border-gray-200 border-opacity-60 rounded-lg">
                        <h1>Results will be showing here.</h1>
                        </div>
                        <div className="py-5">
                                <button className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Download</button>
                        </div>
                    </div>

            </div>
    )

    if (files && results) return (
        <div className="container h-96 py-10 flex md:flex-row mx-auto flew-col">
                    <div className="mx-8 lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 text-center"
                            onDragOver={handleDragOver}
                            onDrop={handleDrop}>
                        <div className=" overflow-auto h-full py-10 border-2  border-gray-200 border-opacity-60 rounded-lg ">
                            <ul>
                                {Array.from(files).map((file, idx) => <li key={idx}>{file.name}</li> )}
                            </ul>
                            <input type="file"
                                    multiple
                                    onChange={(event) => setFiles(event.target.files)}
                                    hidden
                                    ref={inputRef}
                            />
                            <button onClick={() => inputRef.current.click()}  className="ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg">Select Files</button>
                        </div>
                        <div className="py-5">
                                <button onClick={handleOnSubmit} className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Submit</button>
                        </div>
                    </div>
                    
                    <div className="lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 text-center">
                        <div className="py-10 overflow-auto h-full border-2 border-gray-200 border-opacity-60 rounded-lg">
                        <h1>{results ? results : "Results will be showing here."}</h1>
                        </div>
                        <div className="py-5">
                                <button className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Download</button>
                        </div>
                    </div>

            </div>
    )

    return (
        <>
        {!files && 
            <div className="container h-96 py-10 flex md:flex-row mx-auto flew-col">
                    <div className="mx-8 h-full lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 md:mb-0 text-center"
                            onDragOver={handleDragOver}
                            onDrop={handleDrop}>
                        <div className="py-10 border-2  border-gray-200 border-opacity-60 rounded-lg ">
                            <h1 className="py-5">Drag and drop your files to upload</h1>
                            <h1 className="py-5">or</h1>
                            <input type="file"
                                    multiple
                                    onChange={(event) => setFiles(event.target.files)}
                                    hidden
                                    ref={inputRef}
                            />
                            <button onClick={() => inputRef.current.click()}  className="\ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg">Select Files</button>
                        </div>
                        <div className="py-5">
                                <button className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Submit</button>
                        </div>
                    </div>
                    
                    <div className="lg:max-w-lg lg:w-full md:w-1/2 w-5/6 mb-10 text-center">
                        <div className="py-10 overflow-auto h-full border-2 border-gray-200 border-opacity-60 rounded-lg">
                        <h1>Results will be showing here.</h1>
                        </div>
                        <div className="py-5">
                                <button className="inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">Download</button>
                        </div>
                    </div>

            </div>
            
        }
        </>
    )

}

export default DragDropFiles;